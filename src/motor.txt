/*
En el motor nos va a hacer falta un método para barajar cartas
*/
let indice: number = 0;

import { Tablero, Carta, botonIniciarPartida, cartas, tablero } from "./modelo"

const barajarCartas = (cartas : Carta[]): Carta[] => {
       return cartas.sort(() => Math.random() - 0.5)
  }

  let cartasBarajadas = barajarCartas(cartas);
  
  /*
    Una carta se puede voltear si no está encontrada y no está ya volteada, o no hay dos cartas ya volteadas
  */

    const asignarCartasVolteadas = (tablero: Tablero) => {
      if (tablero.estadoPartida === "CeroCartasLevantadas") {
        tablero.indiceCartaVolteadaA = indice;
        tablero.estadoPartida = "UnaCartaLevantada"
    
      } else if(tablero.estadoPartida === "UnaCartaLevantada") {
        tablero.indiceCartaVolteadaB = indice;
        tablero.estadoPartida = "UnaCartaLevantada"
    
      }
    };



  const sePuedeVoltearLaCarta = (tablero: Tablero, indice: number ): boolean => {
    if(tablero.cartas[indice].estaVuelta || !tablero.cartas[indice].encontrada || tablero.estadoPartida!=="DosCartasLevantadas"){
      return false;
    } 
    return true
  }
  
  const voltearLaCarta = (tablero: Tablero, indice: number) : void => {
    //...
    if(sePuedeVoltearLaCarta(tablero, indice)) {
      tablero.cartas[indice].estaVuelta = true
      
    } 
  }
  
  /*
    Dos cartas son pareja si en el array de tablero de cada una tienen el mismo id
  */

   const obetenerIndiceA =() => tablero.indiceCartaVolteadaA;
   const obetenerIndiceB = ()=> tablero.indiceCartaVolteadaB;

  export const sonPareja = (indiceA: number, indiceB: number, tablero: Tablero): boolean => {
    //...
   return false
    
  }
  
  /*
    Aquí asumimos ya que son pareja, lo que hacemos es marcarlas como encontradas y comprobar si la partida esta completa.
  */
  const parejaEncontrada = (tablero: Tablero, indiceA: number, indiceB: number) : void => {
    //...
  }
  
  /*
    Aquí asumimos que no son pareja y las volvemos a poner boca abajo
  */
  const parejaNoEncontrada = (tablero: Tablero, indiceA :number, indiceB : number) : void => {
    // ...
  }
  
  /*
    Esto lo podemos comprobar o bien utilizando every, o bien utilizando un contador (cartasEncontradas)
  */
  export const esPartidaCompleta=(tablero: Tablero) : boolean => {
    //...
    
    let result = tablero.cartas.every((carta)=> carta.encontrada===true)
    return result
  }
  
  /*
  Iniciar partida
  */
  
  export const iniciarPartida = (tablero: Tablero): void => {
    //...
    tablero.estadoPartida="CeroCartasLevantadas"
  };

  for (let i = 0; i <= cartasBarajadas.length; i++) {
    const carta = document.getElementById(`${i}`) as HTMLElement;
    if (carta !== null && carta !== undefined) {
      carta.addEventListener("click", () => {
        indice = i;
        asignarCartasVolteadas(tablero);
      });
    }
  }

  const handleClick =() => {
    iniciarPartida(tablero)
  }

  botonIniciarPartida.addEventListener( "click", handleClick)